{"version":3,"file":"static/js/698.cbbfc749.chunk.js","mappings":"8MACA,GAAgB,OAAS,4BAA4B,iBAAmB,sCAAsC,aAAe,kCAAkC,SAAW,8BAA8B,eAAiB,oCAAoC,SAAW,8BAA8B,0BAA4B,+CAA+C,YAAc,kC,oGC0C/X,EAxC+B,SAACA,GAM5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,OACnB,GAAE,CAACJ,EAAMI,SAEV,IAAMG,EAAmB,WACWJ,GAA/BD,GACDF,EAAMQ,aAAaJ,EACtB,EAMD,OACI,iCACI,iBAAMK,UAAWC,EAAAA,YAAjB,uBACER,IACE,0BACI,iBAAMS,QAASJ,EAAf,SAAkCP,EAAMI,QAAU,UAGzDF,IACG,0BACI,kBAAOU,SAdA,SAACC,GACpBR,EAAUQ,EAAEC,cAAcC,MAC7B,EAYgDC,WAAW,EAAMC,OAAQV,EACnDQ,MAAOX,QAKjC,EC8BD,EA7DoB,SAACJ,GAEjB,IAAKA,EAAMkB,QACP,OAAO,SAACC,EAAA,EAAD,IAqBX,OACI,0BACI,iBAAKV,UAAWC,EAAAA,OAAhB,WACI,gBAAKU,IAAK,UAAWX,UAAWC,EAAAA,OAAUW,IAAKC,KAC/C,iBAAKb,UAAWC,EAAAA,iBAAhB,WACI,iBAAKD,UAAWC,EAAAA,aAAhB,WACI,gBAAKU,IAAK,OAAQC,IAAKrB,EAAMkB,QAAQK,OAAOC,OAASC,IACpDzB,EAAM0B,UAAW,kBAAOC,KAAK,OAAOf,SAXjC,SAACC,GACrBA,EAAEe,OAAOC,MAAM,IAAM7B,EAAM8B,YAAYjB,EAAEe,OAAOC,MAAM,GACzD,QAWe,iBAAKpB,UAAWC,EAAAA,YAAhB,WACI,gBAAKD,UAAWC,EAAAA,SAAhB,SAA6BV,EAAMkB,QAAQa,YAC3C,yBAAM/B,EAAMkB,QAAQc,WACpB,kBA/BShC,EAAMkB,QAAQe,gBAEnC,iBAAKxB,UAAWC,EAAAA,eAAhB,sHACuB,gBAAKW,IAAK,iDAI/BrB,EAAMkB,QAAQe,oBAAnB,GAEG,iBAAKxB,UAAWC,EAAAA,eAAhB,yDACY,gBAAKW,IAAK,yDAuBV,gBAAKZ,UAAWC,EAAAA,0BAAhB,SAA8CV,EAAMkB,QAAQgB,6BAC5D,gBAAKzB,UAAWC,EAAAA,SAAhB,gEACA,yBAAMV,EAAMkB,QAAQiB,SAASC,YAC7B,yBAAMpC,EAAMkB,QAAQiB,SAASE,WAC7B,yBAAMrC,EAAMkB,QAAQiB,SAASG,MAC7B,yBAAMtC,EAAMkB,QAAQiB,SAASI,WAC7B,yBAAMvC,EAAMkB,QAAQiB,SAASK,aAC7B,yBAAMxC,EAAMkB,QAAQiB,SAASM,WAC7B,yBAAMzC,EAAMkB,QAAQiB,SAASO,UAC7B,yBAAM1C,EAAMkB,QAAQiB,SAASQ,WAC5B3C,EAAM0B,SACH,SAAC,EAAD,CAAwBtB,OAAQJ,EAAMI,OAAQI,aAAcR,EAAMQ,gBAClE,iCACI,iBAAMC,UAAWC,EAAAA,YAAjB,uBACA,yBAAMV,EAAMI,QAAU,qBAOrD,E,UCpED,EAA6B,4BCA7B,EAAuB,mBCYvB,EAVa,SAACJ,GACV,OACI,iBAAKS,UAAWC,EAAhB,WACI,gBAAKW,IAAI,uEACRrB,EAAM4C,QAFX,KAEoB,mBAChB,oCAHJ,IAGwB5C,EAAM6C,YAGrC,E,uCCJKC,GAAcC,EAAAA,EAAAA,GAAiB,IAC/BC,GAAWC,EAAAA,EAAAA,GAAY,YAEzBC,EAAc,SAAClD,GACf,OACI,kBAAMmD,SAAUnD,EAAMoD,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWN,EAAUO,KAAM,cAAeC,YAAa,wBAC3DC,SAAU,CAACC,EAAAA,EAAUZ,MACxB,2CAGX,EAEDI,GAAcS,EAAAA,EAAAA,GAAU,CAChBC,KAAM,QADAD,CAEXT,GAFH,IAIMW,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAID,OAJCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEFC,WAAa,SAACC,GACV,EAAK/D,MAAMgE,QAAQD,EAAOE,YAC7B,IAkBA,OAlBA,8BAED,WACI,IAAIC,EACAC,KAAKnE,MAAMoE,UAAUC,KAAI,SAAAC,GAAK,OAAI,SAAC,EAAD,CAAqB1B,QAAS0B,EAAM1B,QAASC,UAAWyB,EAAMC,YAAnDD,EAAME,GAArB,IAElC,OACI,iBAAK/D,UAAWC,EAAhB,WACI,sCACA,8CACmB,mBACf,SAACwC,EAAD,CAAaC,SAAUgB,KAAKL,iBAEhC,yBACKI,MAIhB,OAtBCL,CAAgBY,EAAAA,eAyBtB,I,UC5BA,GAFyBC,EAAAA,EAAAA,KAfH,SAACC,GACnB,MAAM,CACFP,UAAWO,EAAMC,YAAYR,UAC7BH,YAAaU,EAAMC,YAAYX,YAEtC,IAEwB,SAACY,GACtB,MAAM,CACFb,QAAS,SAACC,GACNY,GAASC,EAAAA,EAAAA,IAAqBb,GAC7B,EAEZ,GAEwBS,CAA6Cb,GCAtE,EAfgB,SAAC7D,GACb,OACI,4BACI,SAAC,EAAD,CACI0B,QAAS1B,EAAM0B,QACfR,QAASlB,EAAMkB,QACfd,OAAQJ,EAAMI,OACdI,aAAcR,EAAMQ,aACpBsB,YAAa9B,EAAM8B,eAEvB,SAAC,EAAD,MAGX,E,oBCLKiD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAcD,OAdCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEFC,eAAiB,WACb,IAAIC,EAAS,EAAKjF,MAAMkF,OAAOC,OAAOF,QAEjCA,IACDA,EAAS,EAAKjF,MAAMoF,qBAMxB,EAAKpF,MAAMqF,eAAeJ,GAC1B,EAAKjF,MAAMsF,cAAcL,GAC5B,IA6BA,OA7BA,yCACD,WACId,KAAKa,gBACR,mCAED,SAAmBO,EAAWC,EAAWC,GACjCtB,KAAKnE,MAAMkF,OAAOC,OAAOF,SAAWM,EAAUL,OAAOC,OAAOF,QAC5Dd,KAAKa,gBAEZ,uBAED,WACI,IAAIC,EAASd,KAAKnE,MAAMkF,OAAOC,OAAOF,OAEtC,OAAKA,IACDA,EAASd,KAAKnE,MAAMoF,mBAIpB,0BACI,SAAC,GAAD,kBAAajB,KAAKnE,OAAlB,IACS0B,SAAUyC,KAAKnE,MAAMkF,OAAOC,OAAOF,OACnC/D,QAASiD,KAAKnE,MAAMkB,QACpBd,OAAQ+D,KAAKnE,MAAMI,OACnBI,aAAc2D,KAAKnE,MAAMQ,aACzBsB,YAAaqC,KAAKnE,MAAM8B,kBATjB,SAAC,KAAD,CAAU4D,GAAI,UAazC,OA3CCX,CAAyBY,EAAAA,WA8F/B,GAAeC,EAAAA,EAAAA,KACXlB,EAAAA,EAAAA,KAZkB,SAACC,GAEnB,MAAO,CACHzD,QAASyD,EAAMC,YAAY1D,QAC3Bd,OAAQuE,EAAMC,YAAYxE,OAC1BqB,UAAWkD,EAAMC,YAAYnD,UAC7B2D,iBAAkBT,EAAMkB,YAAYC,KAAKtB,GACzCuB,OAAQpB,EAAMkB,YAAYE,OAEjC,GAG4B,CACrBV,eAAgBW,EAAAA,GAChBV,cAAeW,EAAAA,GACfzF,aAAc0F,EAAAA,GACdpE,YAAaqE,EAAAA,MAnDF,SAACC,GAChB,OAAO,SAACpG,GACJ,IAAIqG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXrB,GAASsB,EAAAA,EAAAA,MAEb,OACI,SAACL,GAAD,kBACQpG,GADR,IAEIkF,OAAQ,CAACmB,SAAAA,EAAUE,SAAAA,EAAUpB,OAAAA,KAGxC,CACJ,GAiCD,CAOCJ,E","sources":["webpack://shkaf/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://shkaf/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://shkaf/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"ProfileInfo_banner__RQgMA\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rP9Ds\",\"profilePhoto\":\"ProfileInfo_profilePhoto__0RCCb\",\"fullName\":\"ProfileInfo_fullName__wE-yq\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__Kpyh9\",\"contacts\":\"ProfileInfo_contacts__YpTm1\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__l0gH7\",\"statusLabel\":\"ProfileInfo_statusLabel__HBIJ7\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   /* let stateWithSetState = useState(false);\r\n    let editMode = stateWithSetState[0];//в первом элементе массива хранится значение\r\n    let setEditMode = stateWithSetState[1];//во втором элементе хранится функция, которая изменяет значение из 1ого эл-та*/\r\n// пример деструктуризации\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        !editMode ? setEditMode(true) : setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className={s.statusLabel}>Status: </span>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status || \"---\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={activateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport bannerPhoto from \"../../../assets/images/banner-picture.png\"\r\nimport userPhoto from \"../../../assets/images/user_image.png\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n/*{props.profile.lookingForAJob ? <img src={\"https://emojio.ru/images/apple-b/2705.png\"}/> // это тернарное выражение срабатывало в разметке, а полный условный оператор нет\r\n    : <img src={\"https://emoji-uc.akamaized.net/orig/ae/f30b7d0b156dfcbbb5e0d829e52791.png\"}/>}*/\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const setSymbol = () => {if (props.profile.lookingForAJob) {\r\n        return (\r\n            <div className={s.lookingForAJob}>\r\n                Открыт для вакансий<img src={\"https://emojio.ru/images/apple-b/2705.png\"}/>\r\n            </div>\r\n        );\r\n    }\r\n    else if (!props.profile.lookingForAJob) {\r\n        return (\r\n            <div className={s.lookingForAJob}>\r\n                Работаю <img src={\"https://emojis.wiki/emoji-pics/lg/tractor-lg.png\"}/>\r\n            </div>\r\n        );\r\n    }}\r\n\r\n    const updateUserPhoto = (e) => {\r\n        e.target.files[0] && props.updatePhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.banner}>\r\n                <img alt={\"Profile\"} className={s.banner} src={bannerPhoto}/>\r\n                <div className={s.descriptionBlock}>\r\n                    <div className={s.profilePhoto}>\r\n                        <img alt={\"User\"} src={props.profile.photos.large || userPhoto}/>\r\n                        {props.isOwner && <input type=\"file\" onChange={updateUserPhoto}/>}\r\n                    </div>\r\n                    <div className={s.profileInfo}>\r\n                        <div className={s.fullName}>{props.profile.fullName}</div>\r\n                        <div>{props.profile.aboutMe}</div>\r\n                        <br/>\r\n                        {setSymbol()}\r\n                        <div className={s.lookingForAJobDescription}>{props.profile.lookingForAJobDescription}</div>\r\n                        <div className={s.contacts}>Контакты:</div>\r\n                        <div>{props.profile.contacts.facebook}</div>\r\n                        <div>{props.profile.contacts.website}</div>\r\n                        <div>{props.profile.contacts.vk}</div>\r\n                        <div>{props.profile.contacts.twitter}</div>\r\n                        <div>{props.profile.contacts.instagram}</div>\r\n                        <div>{props.profile.contacts.youtube}</div>\r\n                        <div>{props.profile.contacts.github}</div>\r\n                        <div>{props.profile.contacts.mainLink}</div>\r\n                        {props.isOwner ?\r\n                            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/> :\r\n                            <>\r\n                                <span className={s.statusLabel}>Status: </span>\r\n                                <div>{props.status || \"---\"}</div>\r\n                            </>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lzSOf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__c53nU\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://s5o.ru/storage/simple/ru/edt/aa/db/b0/29/rue97ff35b337.png\"/>\r\n            {props.message} <br></br>\r\n            <span>Likes</span> {props.likecount}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {PureComponent} from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {FormControl} from \"../../common/FromControls/FormControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst Textarea = FormControl(\"textarea\")\r\n\r\nlet AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"New post will be here\"}\r\n               validate={[required, maxLength30]} />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddPostForm = reduxForm({\r\n        form: 'post'\r\n})(AddPostForm)\r\n\r\nclass MyPosts extends PureComponent{\r\n\r\n    addNewPost = (values) => {\r\n        this.props.addPost(values.newPostText);\r\n    }\r\n\r\n    render () {\r\n        let postsElements =\r\n            this.props.postsData.map(posts => <Post key={posts.id} message={posts.message} likecount={posts.likesCount}/>)\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <div>\r\n                    Write new post <br/>\r\n                    <AddPostForm onSubmit={this.addNewPost}/>\r\n                </div>\r\n                <div>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n            }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                updatePhoto={props.updatePhoto}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreator,\r\n    updatePhotoThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../redux/profile-reducer\";\r\nimport {Navigate, useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.router.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                return\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId); // callbacks вызываются когда переходим в Мой профиль, будучи авторизованныи\r\n        this.props.getUserStatus(userId);  // или в профиль другого пользователя, кроме случая\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let userId = this.props.router.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) return <Navigate to={\"/login\"}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.router.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         updatePhoto={this.props.updatePhoto}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//wrapper to use router's v6 hooks in class comp (to use HOC pattern like in router v5) // по документации\r\n//другими словами прокидываем router = {params} в контейнерную компоненту\r\nconst withRouter = (WrappedContainer) => {\r\n    return (props) => {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return (\r\n            <WrappedContainer\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n}\r\n/*const TakeParams = (props) => { //комментатор\r\n    return <ProfileContainer\r\n        {...props}\r\n        params={useParams()}\r\n    />\r\n}*/\r\n\r\n/*let withRouter = (ProfileContainer) => { //комментатор\r\n    return (props) => {\r\n        const match = {params: useParams()};\r\n        return <ProfileContainer {...props} match={match}/>\r\n    }\r\n}*/\r\n\r\n//по Димычу\r\n//let WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\n/*// код до compose()\r\nexport default connect(mapStateToProps, {getUserProfile: getUserProfileThunkCreator})\r\n(/!*AuthRedirectComponent*!/withRouter(AuthRedirectComponent));//оборачиваем контейнерную компоненту ещё одной компонентой с помощью connect*/\r\n\r\nlet mapStateToProps = (state) => { //функция, которая принимает state целиком, а возвращает только те данные, которые нужны dump компоненте\r\n    // console.log(\"mapStateToProps profile\")\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userPhoto: state.profilePage.userPhoto,\r\n        authorizedUserId: state.authUserBro.data.id,\r\n        isAuth: state.authUserBro.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile: getUserProfileThunkCreator,\r\n        getUserStatus: getStatusThunkCreator,\r\n        updateStatus: updateStatusThunkCreator,\r\n        updatePhoto: updatePhotoThunkCreator}), // самый нижний слой контейнера\r\n    withRouter)// самый внешний слой контейнера\r\n(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","updateStatus","className","s","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","profile","Preloader","alt","src","bannerPhoto","photos","large","userPhoto","isOwner","type","target","files","updatePhoto","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","message","likecount","maxLength30","maxLengthCreator","Textarea","FormControl","AddPostForm","onSubmit","handleSubmit","Field","component","name","placeholder","validate","required","reduxForm","form","MyPosts","addNewPost","values","addPost","newPostText","postsElements","this","postsData","map","posts","likesCount","id","PureComponent","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","refreshProfile","userId","router","params","authorizedUserId","getUserProfile","getUserStatus","prevProps","prevState","snapshot","to","React","compose","authUserBro","data","isAuth","getUserProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","updatePhotoThunkCreator","WrappedContainer","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}